/*
 * Copyright 2010 Contac Business Software. All rights reserved.
 * CONTAC PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */

package contac.servicio.app;

import contac.commons.form.panel.Bloqueador;
import contac.logger.ContacApacheLog4j;
import contac.servicio.app.login.dlg_Login;
import contac.servicio.app.mdi.MDIForm;
import contac.servicio.autorizacion.ContacPolicy;
import org.apache.log4j.Logger;
import org.pushingpixels.substance.api.SubstanceLookAndFeel;
import org.pushingpixels.substance.api.skin.*;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import java.security.Policy;

public class SplashS extends JWindow {

    //Logger
    private static final Logger logger = Logger.getLogger(SplashS.class);

    public static Thread hilo = new Thread();
    Bloqueador bloqueador = null;
    MDIForm mdi = null;

    private static Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

    /**
     * Creates new form splash
     */
    public SplashS() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jProgressBar1 = new JProgressBar();
        jLabel2 = new JLabel();
        jLabel1 = new JLabel();

        getContentPane().setLayout(null);

        jProgressBar1.setMaximumSize(new Dimension(32767, 5));
        jProgressBar1.setMinimumSize(new Dimension(10, 5));
        jProgressBar1.setPreferredSize(new Dimension(146, 5));
        getContentPane().add(jProgressBar1);
        jProgressBar1.setBounds(0, 260, 460, 5);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("loading...");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 240, 110, 14);

        jLabel1.setIcon(new ImageIcon(getClass().getResource("/contac/resources/images/InventorySplash.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 460, 321);

        pack();
    }// </editor-fold>

    public void showSplash(int Duration) {
        try {

            int width = 421;
            int height = 305;
            Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
            int x = (screen.width - width) / 2;
            int y = (screen.height - height) / 2;

            this.setBounds(x, y, width, height);
            this.setSize(460, 321);
            this.setAlwaysOnTop(true);
            this.setVisible(true);
            this.toFront();

            try {
                Carga();
                Thread.sleep(Duration);
            } catch (Exception e) {
            }
            this.setVisible(false);

            mdi = new MDIForm();
            mdi.setVisible(true);

            bloqueador = new Bloqueador();
            mdi.setGlassPane(bloqueador);
            bloqueador.setVisible(true);
            mdi.repaint();
            mdi.setEnabled(false);

            dlg_Login login = new dlg_Login(mdi);

        } catch (IOException ex) {
            logger.error(ex.getMessage(), ex);
        }
    }

    public void Carga() {
        this.jProgressBar1.setVisible(true);
        try {
            int min = 0;
            int max = 100;
            int i = min;
            this.jProgressBar1.setValue(min);
            this.jProgressBar1.setMinimum(min);
            this.jProgressBar1.setMaximum(max);

            for (i = min; i <= max; i++) {
                this.jProgressBar1.setValue(i);
                try {
                    hilo.sleep(60);
                    if (i >= 0 && i <= 24) {
                        this.jLabel2.setText("Starting modules ... " + i + "%");
                    }
                    if (i >= 25 && i <= 49) {
                        this.jLabel2.setText("Loading Storages ... " + i + "%");
                    }
                    if (i >= 50 && i <= 73) {
                        this.jLabel2.setText("Loading Modules ... " + i + "%");
                    }
                    if (i >= 74 && i <= 99) {
                        this.jLabel2.setText("Loading Components ... " + i + "%");
                    }
                    if (i == 100) {
                        this.jLabel2.setText("Modules Completed!");
                    }
                } catch (InterruptedException ie) {
                }
            }
        } catch (Exception mi) {
        }
    }

    //*****************************************
    //Creando servicio de seguridad
    //*****************************************

    private static void createSecurityPolicy() {

        //Create a Policy
        ContacPolicy policy = new ContacPolicy();

        //Setting policy
        Policy.setPolicy(policy);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //Start runnable thread method
        javax.swing.SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {

                try {
                    //Configurar servicio de Logger
                    new ContacApacheLog4j();

                    //Create Security Policy
                    createSecurityPolicy();

                } catch (ClassNotFoundException ex) {
                    logger.error(ex.getMessage(), ex);
                } catch (InstantiationException ex) {
                    logger.error(ex.getMessage(), ex);
                } catch (IllegalAccessException ex) {
                    logger.error(ex.getMessage(), ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    logger.error(ex.getMessage(), ex);
                } catch (Throwable t) {
                    logger.error(t.getMessage(), t);
                }

                //******************************************
                //Configuring look and feel decoration
                //******************************************
                JFrame.setDefaultLookAndFeelDecorated(true);
                JDialog.setDefaultLookAndFeelDecorated(true);

                try {
                    UIManager.setLookAndFeel(new SubstanceBusinessBlueSteelLookAndFeel());
                } catch (final Exception e) {
                    System.err.println("Cannot set Look & Feel:" + e);
                }

                //Show Splash
                SplashS s = new SplashS();
                s.showSplash(500);
            }
        });
    }

    // Variables declaration - do not modify
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JProgressBar jProgressBar1;
    // End of variables declaration

}
