/*
 *
 * Created on 03-09-2009, 10:04:41 PM
 */

package contac.servicio.app.panel;

import contac.commons.form.panel.GenericFrame;
import contac.commons.form.panel.GenericPanel;
import contac.commons.form.render.Mensajes;
import contac.commons.form.render.cls_Nodo;
import contac.commons.form.render.cls_RenderNode;
import contac.servicio.app.util.Util;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

import javax.swing.*;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;

/**
 *
 * @author hmurbina
 */
public class pnlProveedores extends GenericPanel {

    private JTree arbolReportes;
    private Map<String,cls_Nodo> reports = new HashMap<String,cls_Nodo>();

      /**
     * Message Bundle url
     */
    protected static final String messageUrl = "contac.servicio.app.mensajes.Mensajes";

    /**
     * Key identify panel
     */
    private static final String KEY = "PNL_PROVEEDORES";

    /**
     * Message bundle resource
     */
    protected ResourceBundle resourceBundle;

    /**
     * Constructor
     * @param mdi, MDIForm
     */
    public pnlProveedores(GenericFrame mdi) {

        super(mdi, KEY, "Proveedores", true);

        //Init message bundle resource
        resourceBundle = ResourceBundle.getBundle(messageUrl, mdi.getCurrLocale());
                
        //Init components
        initComponents();

        //Init autoCompleteDecorator
        AutoCompleteDecorator.decorate(this.jTextField1,this.getReportsName(),false);
    }

    @Override
    public void initValues() {
        //To change body of implemented methods use File | Settings | File Templates.
    }

    private void initReportTree(){       
        cls_Nodo raiz = new cls_Nodo("PROVEEDORES");
        raiz.setTipoNodo(cls_Nodo.Raiz);
        this.cargarReportes(raiz);
        this.eventos();
        Util u = new Util();
        u.expandTree(this.arbolReportes,true);
    }
    
    private void cargarReportes(DefaultMutableTreeNode raiz){
        try {
            for (int i = 0; i <this.REPORTES.length; i++) {
                cls_Nodo nodo = new cls_Nodo(this.REPORTES[i][0].toString().toUpperCase());
                nodo.setTipoNodo(cls_Nodo.Reportes);              
                this.reports.put(this.REPORTES[i][0].toString().toUpperCase(), nodo);
                raiz.add(nodo);
            }
            this.arbolReportes = new JTree(raiz);
            this.jScrollPane1.setViewportView(this.arbolReportes);
            this.cambiarApariencia();
        } catch (Exception ex) {

        }
    }
    private void eventos(){
        this.arbolReportes.addMouseListener(new MouseListener() {

            public void mouseClicked(MouseEvent e) {
                //abro el reporte
                if (e.getClickCount() == 2) {
                    if (!arbolReportes.isSelectionEmpty()) {
                        
                    }
                }

            }
            public void mousePressed(MouseEvent e) {

            }

            public void mouseReleased(MouseEvent e) {

            }

            public void mouseEntered(MouseEvent e) {

            }

            public void mouseExited(MouseEvent e) {

            }
        });
    }

    //obtengo el id de la la cuenta seleccionada del arbol
    public String getSelectedReport(){
        cls_Nodo seleccion = (cls_Nodo)this.arbolReportes.getSelectionModel().getSelectionPath().getLastPathComponent();
        return seleccion.getUserObject().toString();
    }


    private void cambiarApariencia(){
        this.arbolReportes.setCellRenderer(new cls_RenderNode());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXHeader1 = new org.jdesktop.swingx.JXHeader();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jXHeader1.setDescription("");
        jXHeader1.setTitle("Proveedores");
        jXHeader1.setFont(new java.awt.Font("Tahoma", 1, 14));
        jXHeader1.setPreferredSize(new java.awt.Dimension(170, 40));
        add(jXHeader1, java.awt.BorderLayout.NORTH);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Listado de Proveedores"));
        jPanel1.setLayout(new java.awt.BorderLayout(0, 5));
        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setPreferredSize(new java.awt.Dimension(100, 25));

        jLabel1.setText("Nombre:");
        jToolBar1.add(jLabel1);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jTextField1);

        //jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cba/inventory/principal/imagenes/Search.png"))); // NOI18N
        jButton1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jPanel1.add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        this.search();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.search();
    }//GEN-LAST:event_jButton1ActionPerformed

    private Object[][] REPORTES =
    {
        {"Casa Pellas S.A.,",1},
        {"CasaCross",2},
        {"Velosa",3},
        {"Cerveceria de Nicaragua",4},
        {"Walmart",5},
        {"Eclipse",6},
        {"SportLine",7},
        {"PayLess",8},
        {"GMB",9},
        {"Movistar",10}
    };

    private List<String> getReportsName(){
        List<String> lista = new java.util.ArrayList<String>();
        for (int i = 0; i <this.REPORTES.length; i++) {
            lista.add(this.REPORTES[i][0].toString().toUpperCase());
        }
        return lista;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private org.jdesktop.swingx.JXHeader jXHeader1;
    // End of variables declaration//GEN-END:variables

    private void search() {
        try{
            String reportName = this.jTextField1.getText().trim();
            TreePath ruta = new TreePath(this.reports.get(reportName).getPath());
            this.arbolReportes.expandPath(ruta);
            this.arbolReportes.setSelectionPath(ruta);
            this.arbolReportes.scrollPathToVisible(ruta);
        }catch(Exception ex){
            Mensajes msn = new Mensajes();
            msn.Information(getMDI(),"No se encontro el reporte ingresado!");
        }
    }

}
