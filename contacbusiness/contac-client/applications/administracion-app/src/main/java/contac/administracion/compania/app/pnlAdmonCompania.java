/*
* AdmonCompaniaPnl.java
*
* Created on Jul 2, 2011, 9:53:17 PM
*/
package contac.administracion.compania.app;

import contac.administracion.controller.AdministraAlmacenController;
import contac.administracion.controller.AdministraCompaniaController;
import contac.commons.app.BaseController;
import contac.commons.components.ClasificadorPnl;
import contac.commons.form.label.JOptionErrorPane;
import contac.commons.form.label.JOptionMessagePane;
import contac.commons.models.comboBox.AlmacenComboBoxModel;
import contac.commons.models.comboBox.ComboBoxEmptySelectionRenderer;
import contac.internationalization.LanguageLocale;
import contac.commons.models.comboBox.MonedaComboBoxModel;
import contac.commons.models.comboBox.PaisComboBoxModel;
import contac.commons.models.tables.BeanTableModel;
import contac.commons.form.label.JErrorLabel;
import contac.commons.form.panel.GenericFrame;
import contac.commons.form.panel.GenericPanel;
import contac.image.ImageFilter;
import contac.image.ImagePreview;
import contac.image.ImageUtils;
import contac.modelo.entity.*;
import contac.text.TextUtil;
import contac.web.WebUtil;
import org.apache.log4j.Logger;

import javax.swing.*;
import javax.swing.table.TableColumnModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.MessageFormat;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;

/**
 * @author Eddy Montenegro
 */
public class pnlAdmonCompania extends GenericPanel {

    //Logger
    private static final Logger logger = Logger.getLogger(pnlAdmonCompania.class);

    //Variable de edicion de registros
    private boolean edit = false;

    //Message Resource Bundle
    private ResourceBundle messageBundle = ResourceBundle.getBundle("contac/administracion/app/mensajes/Mensajes",
            LanguageLocale.getInstance().getLocale());

    //Controller
    private AdministraCompaniaController controller;
    private AdministraAlmacenController controllerAlmacen;

    /**
     * Creates new form AdmonCompaniaPnl
     *
     * @param frame, GenericFrame
     */
    public pnlAdmonCompania(GenericFrame frame) {

        //Call super constructor
        super(frame, "administraCompania", "Administrar Compa\u00f1\u00eda", true, "contac/administracion/app/mensajes/Mensajes",
                new Locale("es", "NIC"));

        //Init controller
        controller = new AdministraCompaniaController();
        controllerAlmacen = new AdministraAlmacenController();

        //Init components
        initComponents();

        //Init nuevo ingreso
        this.controller.init();

        //Init values
        initValues();

        //Register listeners
        registerListeners();

        //Editar registros
        this.edit = false;

    }

    /**
     * Creates new form AdmonCompaniaPnl
     *
     * @param frame,      GenericFrame
     * @param controller, BaseController
     */
    public pnlAdmonCompania(GenericFrame frame, BaseController controller) {

        //Call super constructor
        super(frame, "administraCompania", "Administrar Compa\u00f1\u00eda", true, "contac/administracion/app/mensajes/Mensajes",
                new Locale("es", "NIC"));

        //Init controller
        this.controller = (AdministraCompaniaController) controller;

        //Init components
        initComponents();

        //Init Modificacion
        this.controller.initModificacion();

        //Init values
        initValues();

        //Register listeners
        registerListeners();

        //Editar registros
        this.edit = true;

        //Change btnAceptar label
        btnAceptar.setText(messageBundle.getString("CONTAC.FORM.BTNMODIFICAR"));
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        companiaTab = new javax.swing.JTabbedPane();
        pnlDatosGenerales = new javax.swing.JPanel();
        frmDatosGenerales = new javax.swing.JPanel();
        lblTipoPersona = new javax.swing.JLabel();
        rgTipoPersona = new org.jdesktop.swingx.JXRadioGroup();
        rbNatural = new javax.swing.JRadioButton();
        rbJuridica = new javax.swing.JRadioButton();
        lblRazonSocial = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        lblNombreComercial = new javax.swing.JLabel();
        txtNombreComercial = new javax.swing.JTextField();
        lblNIT = new javax.swing.JLabel();
        txtNIT = new javax.swing.JTextField();
        lblFechaConstitucion = new javax.swing.JLabel();
        dpFechaConstitucion = new org.jdesktop.swingx.JXDatePicker();
        lblFechaAltaContribuyente = new javax.swing.JLabel();
        dpFechaAltaContribuyente = new org.jdesktop.swingx.JXDatePicker();
        lblEslogan = new javax.swing.JLabel();
        txtEslogan = new javax.swing.JTextField();
        lblLogotipo = new javax.swing.JLabel();
        lblPais = new javax.swing.JLabel();
        cmbPais = new javax.swing.JComboBox();
        lblEstado = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        lblCiudad = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        lblCodigoPostal = new javax.swing.JLabel();
        txtCodigoPostal = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        spDireccion = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblWeb = new javax.swing.JLabel();
        txtWeb = new javax.swing.JTextField();
        pnlTelefonos = new javax.swing.JPanel();
        txtTelefonoOficina = new javax.swing.JTextField();
        txtTelefonoMovil = new javax.swing.JTextField();
        txtFax = new javax.swing.JTextField();
        lblTelefonoOficina = new javax.swing.JLabel();
        lblTelefonoMovil = new javax.swing.JLabel();
        lblFax = new javax.swing.JLabel();
        btnAgregarLogotipo = new javax.swing.JButton();
        lblMoneda = new javax.swing.JLabel();
        cmbMoneda = new javax.swing.JComboBox();
        pnlAcciones = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlClasificaciones = new javax.swing.JPanel();
        tbClasificaciones = new javax.swing.JToolBar();
        btnAgregarClasificador = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btnEditarClasificador = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btnRemoverClasificador = new javax.swing.JButton();
        pnlTableClasificaciones = new javax.swing.JPanel();
        scrollTblClasificaciones = new javax.swing.JScrollPane();
        tblClasificaciones = new javax.swing.JTable();
        pnlAlmacenes = new javax.swing.JPanel();
        scrollTblAlmacenes = new javax.swing.JScrollPane();
        tblAlmacenes = new javax.swing.JTable();
        tbAlmacenes = new javax.swing.JToolBar();
        btnAgregarAlmacen = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btnEditarAlmacen = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btnRemoverAlmacen = new javax.swing.JButton();
        btnEliminarAlmacen = new javax.swing.JButton();
        btnActivarAlmacen = new javax.swing.JButton();
        header = new org.jdesktop.swingx.JXHeader();

        setLayout(new java.awt.BorderLayout());

        companiaTab.setTabPlacement(javax.swing.JTabbedPane.RIGHT);

        pnlDatosGenerales.setLayout(new java.awt.BorderLayout());

        frmDatosGenerales.setPreferredSize(new java.awt.Dimension(755, 440));
        frmDatosGenerales.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("contac/administracion/app/mensajes/Mensajes_es"); // NOI18N
        lblTipoPersona.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TIPOPERSONA")); // NOI18N
        frmDatosGenerales.add(lblTipoPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, 20));

        rbNatural.setSelected(true);
        rbNatural.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TIPOPERSONA.NATURAL")); // NOI18N
        rbNatural.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbNaturalStateChanged(evt);
            }
        });

        rbJuridica.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TIPOPERSONA.JURIDICA")); // NOI18N
        rbJuridica.setActionCommand(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TIPOPERSONA.JURIDICA")); // NOI18N
        rbJuridica.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbJuridicaStateChanged(evt);
            }
        });

        javax.swing.GroupLayout rgTipoPersonaLayout = new javax.swing.GroupLayout(rgTipoPersona);
        rgTipoPersona.setLayout(rgTipoPersonaLayout);
        rgTipoPersonaLayout.setHorizontalGroup(
                rgTipoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rgTipoPersonaLayout.createSequentialGroup()
                                .addComponent(rbNatural)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rbJuridica)
                                .addContainerGap(8, Short.MAX_VALUE))
        );
        rgTipoPersonaLayout.setVerticalGroup(
                rgTipoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(rgTipoPersonaLayout.createSequentialGroup()
                                .addGroup(rgTipoPersonaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(rbNatural, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(rbJuridica, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frmDatosGenerales.add(rgTipoPersona, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, 130, 20));

        lblRazonSocial.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRazonSocial.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.RAZONSOCIAL")); // NOI18N
        frmDatosGenerales.add(lblRazonSocial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 120, 20));
        lblRazonSocial.getAccessibleContext().setAccessibleName(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.NOMBRECOMERCIAL")); // NOI18N

        frmDatosGenerales.add(txtRazonSocial, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 430, 23));

        lblNombreComercial.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombreComercial.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.NOMBRECOMERCIAL")); // NOI18N
        frmDatosGenerales.add(lblNombreComercial, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 120, 20));

        txtNombreComercial.setToolTipText("");
        txtNombreComercial.setMinimumSize(new java.awt.Dimension(6, 25));
        txtNombreComercial.setPreferredSize(new java.awt.Dimension(59, 30));
        frmDatosGenerales.add(txtNombreComercial, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 430, 23));

        lblNIT.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNIT.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.NIT")); // NOI18N
        frmDatosGenerales.add(lblNIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 120, 20));
        frmDatosGenerales.add(txtNIT, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 190, 23));

        lblFechaConstitucion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFechaConstitucion.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.FECHACONSTITUCION")); // NOI18N
        frmDatosGenerales.add(lblFechaConstitucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 120, 20));

        dpFechaConstitucion.setBackground(new java.awt.Color(255, 255, 255));
        frmDatosGenerales.add(dpFechaConstitucion, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 132, 130, 23));

        lblFechaAltaContribuyente.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFechaAltaContribuyente.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.FECHAALTACONTRIBUYENTE")); // NOI18N
        frmDatosGenerales.add(lblFechaAltaContribuyente, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, -1, 20));
        frmDatosGenerales.add(dpFechaAltaContribuyente, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 130, 23));

        lblEslogan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEslogan.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.ESLOGAN")); // NOI18N
        frmDatosGenerales.add(lblEslogan, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 120, 20));
        frmDatosGenerales.add(txtEslogan, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 430, 23));

        lblLogotipo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogotipo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frmDatosGenerales.add(lblLogotipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, 170, 173));

        lblPais.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPais.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.PAIS")); // NOI18N
        frmDatosGenerales.add(lblPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(-1, 190, 120, 20));

        cmbPais.setModel(new PaisComboBoxModel(controller.getPaises()));
        cmbPais.setOpaque(false);
        frmDatosGenerales.add(cmbPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 190, 190, 23));

        lblEstado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEstado.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.ESTADO")); // NOI18N
        frmDatosGenerales.add(lblEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 190, 50, 20));
        frmDatosGenerales.add(txtEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 150, 23));

        lblCiudad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCiudad.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CIUDAD")); // NOI18N
        frmDatosGenerales.add(lblCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 120, 20));
        frmDatosGenerales.add(txtCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 220, 190, 23));

        lblCodigoPostal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigoPostal.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CODIGOPOSTAL")); // NOI18N
        frmDatosGenerales.add(lblCodigoPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 220, 70, 20));
        frmDatosGenerales.add(txtCodigoPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 150, 23));

        lblDireccion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDireccion.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.DIRECCION")); // NOI18N
        frmDatosGenerales.add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 250, 120, 20));

        txtDireccion.setColumns(20);
        txtDireccion.setLineWrap(true);
        txtDireccion.setRows(5);
        txtDireccion.setWrapStyleWord(true);
        spDireccion.setViewportView(txtDireccion);

        frmDatosGenerales.add(spDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 430, 50));

        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.EMAIL")); // NOI18N
        frmDatosGenerales.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, 120, 20));
        frmDatosGenerales.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, 430, 23));

        lblWeb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWeb.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.WEB")); // NOI18N
        frmDatosGenerales.add(lblWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 120, 20));
        frmDatosGenerales.add(txtWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 430, 23));

        pnlTelefonos.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TELEFONOS"))); // NOI18N
        pnlTelefonos.setToolTipText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TELEFONOS")); // NOI18N
        pnlTelefonos.setName(""); // NOI18N

        lblTelefonoOficina.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.OFICINA")); // NOI18N

        lblTelefonoMovil.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.MOVIL")); // NOI18N

        lblFax.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.FAX")); // NOI18N

        javax.swing.GroupLayout pnlTelefonosLayout = new javax.swing.GroupLayout(pnlTelefonos);
        pnlTelefonos.setLayout(pnlTelefonosLayout);
        pnlTelefonosLayout.setHorizontalGroup(
            pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTelefonosLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefonoOficina, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefonoOficina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefonoMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefonoMovil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFax)
                    .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        pnlTelefonosLayout.setVerticalGroup(
            pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTelefonosLayout.createSequentialGroup()
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefonoOficina)
                    .addComponent(lblTelefonoMovil)
                    .addComponent(lblFax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefonoOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoMovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        frmDatosGenerales.add(pnlTelefonos, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 370, 510, 70));
        pnlTelefonos.getAccessibleContext().setAccessibleName(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TELEFONOS")); // NOI18N

        btnAgregarLogotipo.setText("...");
        btnAgregarLogotipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarLogotipoActionPerformed(evt);
            }
        });
        frmDatosGenerales.add(btnAgregarLogotipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 190, 20, -1));

        lblMoneda.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblMoneda.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.MONEDA")); // NOI18N
        lblMoneda.setPreferredSize(new java.awt.Dimension(34, 20));
        frmDatosGenerales.add(lblMoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 100, 100, 23));

        cmbMoneda.setModel(new MonedaComboBoxModel(controller.getMonedas()));
        cmbMoneda.setMinimumSize(new java.awt.Dimension(51, 20));
        frmDatosGenerales.add(cmbMoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, 130, 23));

        pnlDatosGenerales.add(frmDatosGenerales, java.awt.BorderLayout.NORTH);

        pnlAcciones.setPreferredSize(new java.awt.Dimension(755, 150));

        btnAceptar.setText(bundle.getString("CONTAC.FORM.BTNACEPTAR")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText(bundle.getString("CONTAC.FORM.BTNCANCELAR")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAccionesLayout = new javax.swing.GroupLayout(pnlAcciones);
        pnlAcciones.setLayout(pnlAccionesLayout);
        pnlAccionesLayout.setHorizontalGroup(
            pnlAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccionesLayout.createSequentialGroup()
                .addGap(298, 298, 298)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar)
                .addContainerGap(290, Short.MAX_VALUE))
        );
        pnlAccionesLayout.setVerticalGroup(
            pnlAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAceptar)
                    .addComponent(btnCancelar))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pnlDatosGenerales.add(pnlAcciones, java.awt.BorderLayout.CENTER);

        companiaTab.addTab(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TAB.GENERALES"), pnlDatosGenerales); // NOI18N

        pnlClasificaciones.setLayout(new java.awt.BorderLayout());

        tbClasificaciones.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAgregarClasificador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contac/administracion/app/images/page_new.gif"))); // NOI18N
        btnAgregarClasificador.setToolTipText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CLASIFICACIONES.AGREGAR")); // NOI18N
        btnAgregarClasificador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAgregarClasificador.setFocusable(false);
        btnAgregarClasificador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarClasificador.setMaximumSize(new java.awt.Dimension(40, 28));
        btnAgregarClasificador.setMinimumSize(new java.awt.Dimension(40, 28));
        btnAgregarClasificador.setPreferredSize(new java.awt.Dimension(59, 28));
        btnAgregarClasificador.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregarClasificador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarClasificadorActionPerformed(evt);
            }
        });
        tbClasificaciones.add(btnAgregarClasificador);
        tbClasificaciones.add(jSeparator1);

        btnEditarClasificador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contac/administracion/app/images/page_edit.gif"))); // NOI18N
        btnEditarClasificador.setToolTipText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CLASIFICACIONES.REMOVER")); // NOI18N
        btnEditarClasificador.setFocusable(false);
        btnEditarClasificador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarClasificador.setMaximumSize(new java.awt.Dimension(40, 28));
        btnEditarClasificador.setMinimumSize(new java.awt.Dimension(40, 28));
        btnEditarClasificador.setName(""); // NOI18N
        btnEditarClasificador.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbClasificaciones.add(btnEditarClasificador);
        tbClasificaciones.add(jSeparator2);

        btnRemoverClasificador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/contac/administracion/app/images/page_delete.gif"))); // NOI18N
        btnRemoverClasificador.setToolTipText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CLASIFICACIONES.REMOVER")); // NOI18N
        btnRemoverClasificador.setFocusable(false);
        btnRemoverClasificador.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoverClasificador.setMaximumSize(new java.awt.Dimension(40, 28));
        btnRemoverClasificador.setMinimumSize(new java.awt.Dimension(40, 28));
        btnRemoverClasificador.setName(""); // NOI18N
        btnRemoverClasificador.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemoverClasificador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverClasificadorActionPerformed(evt);
            }
        });
        tbClasificaciones.add(btnRemoverClasificador);

        pnlClasificaciones.add(tbClasificaciones, java.awt.BorderLayout.PAGE_START);

        tblClasificaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClasificacionesMouseClicked(evt);
            }
        });
        scrollTblClasificaciones.setViewportView(tblClasificaciones);

        javax.swing.GroupLayout pnlTableClasificacionesLayout = new javax.swing.GroupLayout(pnlTableClasificaciones);
        pnlTableClasificaciones.setLayout(pnlTableClasificacionesLayout);
        pnlTableClasificacionesLayout.setHorizontalGroup(
            pnlTableClasificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTblClasificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
        );
        pnlTableClasificacionesLayout.setVerticalGroup(
            pnlTableClasificacionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollTblClasificaciones, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
        );

        pnlClasificaciones.add(pnlTableClasificaciones, java.awt.BorderLayout.CENTER);

        companiaTab.addTab("Clasificaciones", pnlClasificaciones);

        pnlAlmacenes.setLayout(new java.awt.BorderLayout());

        tblAlmacenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAlmacenesMouseClicked(evt);
            }
        });
        scrollTblAlmacenes.setViewportView(tblAlmacenes);

        pnlAlmacenes.add(scrollTblAlmacenes, java.awt.BorderLayout.CENTER);

        tbAlmacenes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnAgregarAlmacen.setIcon(new ImageIcon(getClass().getResource("/contac/resources/icons/actions/new.png")));
        btnAgregarAlmacen.setToolTipText(bundle.getString("CONTAC.FORM.BTNNUEVO")); // NOI18N
        btnAgregarAlmacen.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnAgregarAlmacen.setFocusable(false);
        btnAgregarAlmacen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregarAlmacen.setMaximumSize(new java.awt.Dimension(40, 28));
        btnAgregarAlmacen.setMinimumSize(new java.awt.Dimension(40, 28));
        btnAgregarAlmacen.setPreferredSize(new java.awt.Dimension(59, 28));
        btnAgregarAlmacen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregarAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarAlmacenActionPerformed(evt);
            }
        });
        tbAlmacenes.add(btnAgregarAlmacen);
        tbAlmacenes.add(jSeparator3);

        btnEditarAlmacen.setIcon(new ImageIcon(getClass().getResource("/contac/resources/icons/actions/edit.png")));
        btnEditarAlmacen.setToolTipText(bundle.getString("CONTAC.FORM.BTNEDITAR")); // NOI18N
        btnEditarAlmacen.setFocusable(false);
        btnEditarAlmacen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarAlmacen.setMaximumSize(new java.awt.Dimension(40, 28));
        btnEditarAlmacen.setMinimumSize(new java.awt.Dimension(40, 28));
        btnEditarAlmacen.setName(""); // NOI18N
        btnEditarAlmacen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarAlmacenActionPerformed(evt);
            }
        });
        tbAlmacenes.add(btnEditarAlmacen);
        tbAlmacenes.add(jSeparator4);

        btnRemoverAlmacen.setIcon(new ImageIcon(getClass().getResource("/contac/resources/icons/actions/remove2.png")));
        btnRemoverAlmacen.setToolTipText(bundle.getString("CONTAC.FORM.BTNELIMINARALMACEN")); // NOI18N
        btnRemoverAlmacen.setFocusable(false);
        btnRemoverAlmacen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoverAlmacen.setMaximumSize(new java.awt.Dimension(40, 28));
        btnRemoverAlmacen.setMinimumSize(new java.awt.Dimension(40, 28));
        btnRemoverAlmacen.setName(""); // NOI18N
        btnRemoverAlmacen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemoverAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverAlmacenActionPerformed(evt);
            }
        });
        tbAlmacenes.add(btnRemoverAlmacen);

        btnEliminarAlmacen.setIcon(new ImageIcon(getClass().getResource("/contac/resources/icons/actions/remove.png")));
        btnEliminarAlmacen.setToolTipText(bundle.getString("CONTAC.FORM.BTNELIMINARALMACENESTADO")); // NOI18N
        btnEliminarAlmacen.setFocusable(false);
        btnEliminarAlmacen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminarAlmacen.setMaximumSize(new java.awt.Dimension(40, 28));
        btnEliminarAlmacen.setMinimumSize(new java.awt.Dimension(40, 28));
        btnEliminarAlmacen.setName(""); // NOI18N
        btnEliminarAlmacen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminarAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAlmacenActionPerformed(evt);
            }
        });
        tbAlmacenes.add(btnEliminarAlmacen);

        btnActivarAlmacen.setIcon(new ImageIcon(getClass().getResource("/contac/resources/icons/actions/accept.png")));
        btnActivarAlmacen.setToolTipText(bundle.getString("CONTAC.FORM.BTNACTIVARALMACEN")); // NOI18N
        btnActivarAlmacen.setFocusable(false);
        btnActivarAlmacen.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnActivarAlmacen.setMaximumSize(new java.awt.Dimension(40, 28));
        btnActivarAlmacen.setMinimumSize(new java.awt.Dimension(40, 28));
        btnActivarAlmacen.setName(""); // NOI18N
        btnActivarAlmacen.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnActivarAlmacen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActivarAlmacenActionPerformed(evt);
            }
        });
        tbAlmacenes.add(btnActivarAlmacen);

        pnlAlmacenes.add(tbAlmacenes, java.awt.BorderLayout.PAGE_START);

        companiaTab.addTab("Almacenes", pnlAlmacenes);

        add(companiaTab, java.awt.BorderLayout.CENTER);
        companiaTab.getAccessibleContext().setAccessibleName("datosGeneralesTab");

        header.setForeground(new java.awt.Color(255, 153, 0));
        header.setPreferredSize(new java.awt.Dimension(51, 35));
        header.setTitle(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA")); // NOI18N
        header.setTitleForeground(new java.awt.Color(255, 153, 0));
        add(header, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void btnActivarAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActivarAlmacenActionPerformed
        try{
            if (almacenSelected == null) {
                throw new Exception(messageBundle.getString("CONTAC.FORM.ALMACEN.VALIDA.ACTIVACION"));
            }
            boolean confirmation = JOptionMessagePane.showConfirmationInfo(null, messageBundle.getString("CONTAC.FORM.MSG.ADVERTENCIA"), MessageFormat.
                    format(messageBundle.getString("CONTAC.FORM.ALMACEN.ACTIVARALMACEN.CONFIRMA"),
                            new Object[]{almacenSelected.getDescripcion()}));

                if(confirmation) {
                controller.setAlmacen(almacenSelected);

                //Anular Almacen
                controller.activarAlmacen();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.MSG.CONFIRMACION"),
                        messageBundle.getString("CONTAC.FORM.MSG.ACTIVACION.EXITOSO"));

                //Actualizar listado de articulos ingresados
                ((BeanTableModel) tblAlmacenes.getModel()).fireTableDataChanged();
            }
        } catch (Exception e){
            //Show error message
            JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
        }

    }

    private void btnRemoverAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverAlmacenActionPerformed
        try{
            /*********************Valida Existencias en el Almacen***************************/
            controller.setAlmacen(almacenSelected);
            //controller.validarExistenciasAlmacen();

            // Si no ha seleccionado ningun almacen a inactivar
            if (almacenSelected == null) {
                throw new Exception(messageBundle.getString("CONTAC.FORM.ALMACEN.VALIDA.INACTIVACION"));
            }

            boolean confirmation = JOptionMessagePane.showConfirmationInfo(null, messageBundle.getString("CONTAC.FORM.MSG.ADVERTENCIA"), MessageFormat.
                    format(messageBundle.getString("CONTAC.FORM.ALMACEN.ANULARALMACEN.CONFIRMA"),
                            new Object[]{almacenSelected.getDescripcion()}));

            if(confirmation) {
                controller.setAlmacen(almacenSelected);
                controller.validarExistenciasAlmacen();
                //Anular Almacen
                controller.anularAlmacen();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.MSG.CONFIRMACION"),
                        messageBundle.getString("CONTAC.FORM.MSG.ANULACION.EXITOSO"));

                //Actualizar listado de articulos ingresados
                ((BeanTableModel) tblAlmacenes.getModel()).fireTableDataChanged();
            }
        } catch (Exception e){
            //Show error message
            JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
        }

    }

    private void btnEliminarAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAlmacenActionPerformed
        try{
            //*********************Valida Existencias en el Almacen***************************//*
            controller.setAlmacen(almacenSelected);
            //controller.validarExistenciasAlmacen();

            // Si no ha seleccionado ningun almacen a eliminar
            if (almacenSelected == null) {
                throw new Exception(messageBundle.getString("CONTAC.FORM.ALMACEN.VALIDA.ELIMINACION"));
            }
            boolean confirmation = JOptionMessagePane.showConfirmationInfo(null, messageBundle.getString("CONTAC.FORM.MSG.ADVERTENCIA"), MessageFormat.
                    format(messageBundle.getString("CONTAC.FORM.ALMACEN.ELIMINARALMACEN.CONFIRMA"),
                            new Object[]{almacenSelected.getDescripcion()}));


            if(confirmation) {
                controller.setAlmacen(almacenSelected);

                //Anular Almacen
                controller.validarExistenciasAlmacen();
                controller.eliminarAlmacen();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.MSG.CONFIRMACION"),
                        messageBundle.getString("CONTAC.FORM.MSG.ELIMINACION.EXITOSO"));

                //Actualizar listado de articulos ingresados
                ((BeanTableModel) tblAlmacenes.getModel()).fireTableDataChanged();
            }
        } catch (Exception e){
            //Show error message
            JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
        }

    }

    private void btnAgregarClasificadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarClasificadorActionPerformed

        //Open clasificador JDialog for selecting clasificador
        clasificadorSelected = new ClasificadorPnl(mdi, null, true).getClasificadorSelected();

        //********************************************************
        //Getting the clasificador selected
        //********************************************************
        //<Evaluar que el tipo de clasificador seleccionado sea un SEGMENTO>
        if (clasificadorSelected.getTipoClasificador() == TiposClasificador.SEGMENTO.getValue()) {

            if (!controller.getClasificadores().contains(clasificadorSelected)) {
                controller.getClasificadores().add(clasificadorSelected);
                ((BeanTableModel) tblClasificaciones.getModel()).fireTableDataChanged();
            }
        } else {
            JOptionPane.showMessageDialog(this, new JErrorLabel("El clasificador debe ser un segmento valido."));
        }
    }//GEN-LAST:event_btnAgregarClasificadorActionPerformed

    private void btnRemoverClasificadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverClasificadorActionPerformed

        //Remover clasificador del listado de clasificadores
        controller.getClasificadores().remove(rowSelected);
        ((BeanTableModel) tblClasificaciones.getModel()).fireTableDataChanged();

    }//GEN-LAST:event_btnRemoverClasificadorActionPerformed

    private void tblClasificacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClasificacionesMouseClicked

        //Obtener fila seleccionada
        rowSelected = tblClasificaciones.getSelectedRow();

        //Obtener la entidad seleccionada
        clasificadorSelected = (Clasificador) ((BeanTableModel) tblClasificaciones.getModel()).getRow(rowSelected);

    }//GEN-LAST:event_tblClasificacionesMouseClicked

    private void tblAlmacenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlmacenesMouseClicked

        //Obtener fila seleccionada
        rowSelected = tblAlmacenes.getSelectedRow();

        //Obtener la entidad seleccionada
        almacenSelected = (Almacen) ((BeanTableModel) tblAlmacenes.getModel()).getRow(rowSelected);
    }//GEN-LAST:event_tblAlmacenesMouseClicked

    private void btnAgregarAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarAlmacenActionPerformed

        //Open almacen JDialog for adding almacen
        almacenSelected = new pnlAdmonAlmacen(mdi, true).getAlmacen();

        if (almacenSelected != null) {
            //Adding almacenSelected to grid
            controller.getAlmacenes().add(almacenSelected);
            ((BeanTableModel) tblAlmacenes.getModel()).fireTableDataChanged();
        }

    }//GEN-LAST:event_btnAgregarAlmacenActionPerformed

    private void btnEditarAlmacenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarAlmacenActionPerformed
        if (almacenSelected != null) {
            //Open almacen JDialog for adding almacen
            almacenSelected = new pnlAdmonAlmacen(mdi, almacenSelected, true).getAlmacen();

            for (Almacen almacen : controller.getAlmacenes()) {
                if (almacen.getCodigo() == almacenSelected.getCodigo()) {
                    //Remover almacen anterior
                    controller.getAlmacenes().remove(almacen);
                    //Agregar nuevo almacen
                    controller.getAlmacenes().add(almacenSelected);
                    ((BeanTableModel) tblAlmacenes.getModel()).fireTableDataChanged();

                    //Exit for
                    break;
                }
            }
        }
    }//GEN-LAST:event_btnEditarAlmacenActionPerformed

    private void rbNaturalStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbNaturalStateChanged
        if (rbNatural.isSelected()) {
            rbJuridica.setSelected(false);
        }

        if (!rbNatural.isSelected()) {
            rbJuridica.setSelected(true);
        }
    }//GEN-LAST:event_rbNaturalStateChanged

    private void rbJuridicaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbJuridicaStateChanged
        if (rbJuridica.isSelected()) {
            rbNatural.setSelected(false);
        }

        if (!rbJuridica.isSelected()) {
            rbNatural.setSelected(true);
        }
    }//GEN-LAST:event_rbJuridicaStateChanged

    private void btnAgregarLogotipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarLogotipoActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(new ImageFilter());
        jfc.setAcceptAllFileFilterUsed(true);
        jfc.setAccessory(new ImagePreview(jfc));

        int returnVal = jfc.showOpenDialog(this);

        //Obtaining a file selected
        File file;

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = jfc.getSelectedFile();

            //Load image into JLabel
            ImageIcon imageIcon = new ImageIcon(file.getPath());
            Image image = imageIcon.getImage().getScaledInstance(170, 173, Image.SCALE_DEFAULT);
            imageIcon.setImage(image);
            lblLogotipo.setIcon(imageIcon);
        }

    }//GEN-LAST:event_btnAgregarLogotipoActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        try {

            //Validar datos form
            validaDatosForm();

            //Proceder a registrar datos de almacen en el controller
            if (rbNatural.isSelected())
                controller.setTipoPersona(TiposPersona.PERSONA_NATURAL);

            if (rbJuridica.isSelected())
                controller.setTipoPersona(TiposPersona.PERSONA_JURIDICA);

            controller.setNombreComercial(txtNombreComercial.getText());
            controller.setRazonSocial(txtRazonSocial.getText());
            controller.setNit(txtNIT.getText());
            controller.setFechaConstitucion(dpFechaConstitucion.getDate());
            controller.setFechaAltaContribuyente(dpFechaAltaContribuyente.getDate());
            controller.setEslogan(txtEslogan.getText());
            controller.setMoneda((Moneda) ((MonedaComboBoxModel) cmbMoneda.getModel()).getSelectedItem().getObject());
            controller.setPais((Pais) ((PaisComboBoxModel) cmbPais.getModel()).getSelectedItem().getObject());
            controller.setEstado(txtEstado.getText());
            controller.setCiudad(txtCiudad.getText());
            controller.setCodigoPostal(txtCodigoPostal.getText());
            controller.setDireccion(txtDireccion.getText());
            controller.setEmail(txtEmail.getText());
            controller.setWeb(txtWeb.getText());
            controller.setTelefonoOficina(txtTelefonoOficina.getText());
            controller.setTelefonoMovil(txtTelefonoMovil.getText());
            controller.setFax(txtFax.getText());

            //Setting image
            ImageIcon imageIcon = (ImageIcon) lblLogotipo.getIcon();
            if (imageIcon != null) {
                Image image = imageIcon.getImage();
                controller.setLogotipo(ImageUtils.convertoToByteArray(image));
            }

            //Registrar nueva compania
            if (!edit) {
                controller.registrarCompania();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.INGRESO.EXITOSO"),
                        messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.INGRESO.EXITOSO"));
            }

            //Modificar compania
            if (edit) {
                controller.modificarCompania();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.MODIFICA.EXITOSO"),
                        messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.MODIFICA.EXITOSO"));

                //Change btnAceptar label
                btnAceptar.setText(messageBundle.getString("CONTAC.FORM.BTNACEPTAR"));
            }

            //Open formulario de registro de compania
            getMDI().getStyle().addPanel("pnlRegistroCompanias", "contac.administracion.compania.app.pnlRegistroCompanias");

            //Close this panel
            getMDI().getStyle().removePanel(this);

        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            JOptionErrorPane.showMessageError(null, messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.REGISTRO.VALIDA"),
                    e.getMessage());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        //Init valores para nuevo ingreso
        controller.init();

        //Init values
        initValues();

    }//GEN-LAST:event_btnCancelarActionPerformed

    //<Cargar datos compania>
    public void initValues() {

        try {

            //Init format dates
            dpFechaAltaContribuyente.setFormats("dd/MM/yyyy");
            dpFechaConstitucion.setFormats("dd/MM/yyyy");

            //Init data values components
            if (controller.getTipoPersona().getValue() == TiposPersona.PERSONA_NATURAL.getValue()) {
                rbNatural.setSelected(true);
                rbJuridica.setSelected(false);
            } else {
                rbNatural.setSelected(false);
                rbJuridica.setSelected(true);
            }

            txtNombreComercial.setText(controller.getNombreComercial());
            txtRazonSocial.setText(controller.getRazonSocial());
            txtNIT.setText(controller.getNit());

            ListCellRenderer rendererMoneda = new ComboBoxEmptySelectionRenderer(cmbMoneda, messageBundle.getString("CONTAC.FORM.MSG.SELECCIONE"));
            if (controller.getMoneda() != null) {
                MonedaComboBoxModel monedaModel = (MonedaComboBoxModel) cmbMoneda.getModel();
                cmbMoneda.setRenderer(rendererMoneda);
                cmbMoneda.setSelectedItem(monedaModel.searchSelectedItem(controller.getMoneda().getId()));
            } else {
                cmbMoneda.setRenderer(rendererMoneda);
                cmbMoneda.setSelectedIndex(-1);
            }

            dpFechaConstitucion.setDate(controller.getFechaConstitucion());
            dpFechaAltaContribuyente.setDate(controller.getFechaAltaContribuyente());
            txtEslogan.setText(controller.getEslogan());

            ListCellRenderer rendererPais = new ComboBoxEmptySelectionRenderer(cmbPais, messageBundle.getString("CONTAC.FORM.MSG.SELECCIONE"));
            if (controller.getPais() != null) {
                PaisComboBoxModel paisModel = (PaisComboBoxModel) cmbPais.getModel();
                cmbPais.setRenderer(rendererPais);
                cmbPais.setSelectedItem(paisModel.searchSelectedItem(controller.getPais().getId()));
            } else {
                cmbPais.setRenderer(rendererPais);
                cmbPais.setSelectedIndex(-1);
            }
            txtEstado.setText(controller.getEstado());
            txtCiudad.setText(controller.getCiudad());
            txtCodigoPostal.setText(controller.getCodigoPostal());
            txtDireccion.setText(controller.getDireccion());
            txtEmail.setText(controller.getEmail());
            txtWeb.setText(controller.getWeb());
            txtTelefonoOficina.setText(controller.getTelefonoOficina());
            txtTelefonoMovil.setText(controller.getTelefonoMovil());
            txtFax.setText(controller.getFax());

            //Init logotipo
            if (controller.getLogotipo() != null) {
                ImageIcon imageIcon = new ImageIcon();
                imageIcon.setImage(ImageUtils.convertToImage(controller.getLogotipo()));
                lblLogotipo.setIcon(imageIcon);
            } else {
                lblLogotipo.setIcon(null);
            }

            //Init clasificadores
            clasificadorBeanTableModel = new BeanTableModel<Clasificador>(Clasificador.class, controller.getClasificadores());
            clasificadorBeanTableModel.setModelEditable(false);
            clasificadorBeanTableModel.sortColumnNames();
            tblClasificaciones.setModel(clasificadorBeanTableModel);
            tblClasificaciones.setRowSelectionAllowed(true);

            //Obteniendo table column model y removiendo columnas innecesarias
            TableColumnModel clasificadorColumnModel = tblClasificaciones.getColumnModel();
            String[] clasificadorColumnsRemove = new String[]{"Id", "Ctime", "Cuser", "Mtime", "Muser", "Sinonimos", "Elemento Padre", "Tipo Clasificador"};

            for (String columnLabel : clasificadorColumnsRemove) {
                clasificadorColumnModel.removeColumn(clasificadorColumnModel.getColumn(clasificadorColumnModel.getColumnIndex(columnLabel)));
            }

            //Init almacenes
            almacenesBeanTableModel = new BeanTableModel<Almacen>(Almacen.class, controller.getAlmacenes());
            almacenesBeanTableModel.setModelEditable(false);
            almacenesBeanTableModel.sortColumnNames();
            tblAlmacenes.setModel(almacenesBeanTableModel);
            tblAlmacenes.setRowSelectionAllowed(true);

            //Obteniendo table column model y removiendo columnas innecesarias
            TableColumnModel almacenColumnModel = tblAlmacenes.getColumnModel();
            String[] almacenColumnsRemove = new String[]{"Id", "Direccion", "Tipo Almacen", "No Autorizacion Comercial",
                    "Ctime", "Cuser", "Mtime", "Muser", "Estatus", "Compania"};

            for (String columnLabel : almacenColumnsRemove) {
                almacenColumnModel.removeColumn(almacenColumnModel.getColumn(almacenColumnModel.getColumnIndex(columnLabel)));
            }

            //Set edit false
            this.edit = false;

            //Set Label btnAceptar to Aceptar
            btnAceptar.setText(messageBundle.getString("CONTAC.FORM.BTNACEPTAR"));

        } catch(Exception e) {
            logger.error(e.getMessage(), e);
            //Show message error
            JOptionErrorPane.showMessageError(null, messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.ERROR.INIT"),
                    e.getMessage());
        }
    }

    private void registerListeners() { //BEGIN: Register Listener

        //*****************************************************************************
        //<Register listeners>
        //*****************************************************************************

        //<Nombre Comercial>
        txtNombreComercial.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtRazonSocial.requestFocusInWindow();
                    txtRazonSocial.selectAll();
                }
            }
        });

        //<Razon Social>
        txtRazonSocial.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtNIT.requestFocusInWindow();
                    txtNIT.selectAll();
                }
            }
        });

        //<NIT>
        txtNIT.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    cmbMoneda.requestFocusInWindow();
                }
            }
        });

        //<Moneda>
        cmbMoneda.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    dpFechaConstitucion.requestFocusInWindow();
                }
            }
        });

        //<Fecha Constitucion>
        dpFechaConstitucion.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    dpFechaAltaContribuyente.requestFocusInWindow();
                }
            }
        });

        //<Fecha alta contribuyente>
        dpFechaAltaContribuyente.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    txtEslogan.requestFocusInWindow();
                }
            }
        });

        //<Eslogan>
        txtEslogan.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    cmbPais.requestFocusInWindow();
                }
            }
        });

        //<cmbPais>
        cmbPais.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    txtEstado.requestFocusInWindow();
                    txtEstado.selectAll();
                }
            }
        });

        //<txtEstado>
        txtEstado.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtCiudad.requestFocusInWindow();
                    txtCiudad.selectAll();
                }
            }
        });

        //<txtCiudad>
        txtCiudad.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtCodigoPostal.requestFocusInWindow();
                    txtCodigoPostal.selectAll();
                }
            }
        });

        //<TxtCodigoPostal>
        txtCodigoPostal.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtDireccion.requestFocusInWindow();
                    txtDireccion.selectAll();
                }
            }
        });

        //<txtDireccion>
        txtDireccion.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtEmail.requestFocusInWindow();
                    txtEmail.selectAll();
                }
            }
        });

        //<txtEmail>
        txtEmail.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    txtWeb.requestFocusInWindow();
                    txtWeb.selectAll();
                }
            }
        });

        //<txtWeb>
        txtWeb.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtTelefonoOficina.requestFocusInWindow();
                    txtTelefonoOficina.selectAll();
                }
            }
        });

        //<txtTelefonoOficina>
        txtTelefonoOficina.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtTelefonoMovil.requestFocusInWindow();
                    txtTelefonoMovil.selectAll();
                }
            }
        });

        //<txtTelefonoMovil>
        txtTelefonoMovil.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtFax.requestFocusInWindow();
                    txtFax.selectAll();
                }
            }
        });

        //<txtFax>
        txtFax.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    btnAceptar.requestFocusInWindow();
                }
            }
        });
    }

   //<Valida datos del formulario>
    private void validaDatosForm() throws Exception {

        //Nombre Comercial
        if (txtNombreComercial.getText().equals("")) {
            //Request focus
            txtNombreComercial.requestFocusInWindow();
            txtNombreComercial.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.NOMBRECOMERCIAL.VALIDA"));
        }

        //Razon Social
        if (txtRazonSocial.getText().equals("")) {
            //Request focus
            txtRazonSocial.requestFocusInWindow();
            txtRazonSocial.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.RAZONSOCIAL.VALIDA"));
        }

        //Nit
        if (txtNIT.getText().equals("")) {
            //Request focus
            txtNIT.requestFocusInWindow();
            txtNIT.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.NIT.VALIDA"));
        }

        //Moneda
        if (cmbMoneda.getSelectedIndex() == -1) {
            //Request focus
            cmbMoneda.requestFocusInWindow();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.MONEDA.VALIDA"));
        }

        //Fecha constitucion
        if (dpFechaConstitucion.getDate() == null) {
            //Request focus
            dpFechaConstitucion.requestFocusInWindow();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.FECHACONSTITUCION.VALIDA"));
        }

        //Pais
        if (cmbPais.getSelectedIndex() == -1) {
            //Request focus
            cmbPais.requestFocusInWindow();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.PAIS.VALIDA"));
        }

        //Estado
        if (txtEstado.getText().equals("")) {
            //Request focus
            txtEstado.requestFocusInWindow();
            txtEstado.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.ESTADO.VALIDA"));
        }

        //Ciudad
        if (txtCiudad.getText().equals("")) {
            //Request focus
            txtCiudad.requestFocusInWindow();
            txtCiudad.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.CIUDAD.VALIDA"));
        }


        //Direccion
        if (txtDireccion.getText().equals("")) {
            //Request focus
            txtDireccion.requestFocusInWindow();
            txtDireccion.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.DIRECCION_2.VALIDA"));
        }

        //<Email>
        if (!txtEmail.getText().equals("")) {

            if (!WebUtil.isValidEmailAddress(txtEmail.getText())) {
                //Request focus
                txtEmail.requestFocusInWindow();
                txtEmail.selectAll();
                //Throw error message
                throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.EMAIL.VALIDA"));
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregarAlmacen;
    private javax.swing.JButton btnAgregarClasificador;
    private javax.swing.JButton btnAgregarLogotipo;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditarAlmacen;
    private javax.swing.JButton btnEditarClasificador;
    private javax.swing.JButton btnRemoverAlmacen;
    private javax.swing.JButton btnEliminarAlmacen;
    private javax.swing.JButton btnActivarAlmacen;
    private javax.swing.JButton btnRemoverClasificador;
    private javax.swing.JComboBox cmbMoneda;
    private javax.swing.JComboBox cmbPais;
    private javax.swing.JTabbedPane companiaTab;
    private org.jdesktop.swingx.JXDatePicker dpFechaAltaContribuyente;
    private org.jdesktop.swingx.JXDatePicker dpFechaConstitucion;
    private javax.swing.JPanel frmDatosGenerales;
    private org.jdesktop.swingx.JXHeader header;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JLabel lblCiudad;
    private javax.swing.JLabel lblCodigoPostal;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEslogan;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFax;
    private javax.swing.JLabel lblFechaAltaContribuyente;
    private javax.swing.JLabel lblFechaConstitucion;
    private javax.swing.JLabel lblLogotipo;
    private javax.swing.JLabel lblMoneda;
    private javax.swing.JLabel lblNIT;
    private javax.swing.JLabel lblNombreComercial;
    private javax.swing.JLabel lblPais;
    private javax.swing.JLabel lblRazonSocial;
    private javax.swing.JLabel lblTelefonoMovil;
    private javax.swing.JLabel lblTelefonoOficina;
    private javax.swing.JLabel lblTipoPersona;
    private javax.swing.JLabel lblWeb;
    private javax.swing.JPanel pnlAcciones;
    private javax.swing.JPanel pnlAlmacenes;
    private javax.swing.JPanel pnlClasificaciones;
    private javax.swing.JPanel pnlDatosGenerales;
    private javax.swing.JPanel pnlTableClasificaciones;
    private javax.swing.JPanel pnlTelefonos;
    private javax.swing.JRadioButton rbJuridica;
    private javax.swing.JRadioButton rbNatural;
    private org.jdesktop.swingx.JXRadioGroup rgTipoPersona;
    private javax.swing.JScrollPane scrollTblAlmacenes;
    private javax.swing.JScrollPane scrollTblClasificaciones;
    private javax.swing.JScrollPane spDireccion;
    private javax.swing.JToolBar tbAlmacenes;
    private javax.swing.JToolBar tbClasificaciones;
    private javax.swing.JTable tblAlmacenes;
    private javax.swing.JTable tblClasificaciones;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCodigoPostal;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEslogan;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtNIT;
    private javax.swing.JTextField txtNombreComercial;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtTelefonoMovil;
    private javax.swing.JTextField txtTelefonoOficina;
    private javax.swing.JTextField txtWeb;
    // End of variables declaration//GEN-END:variables

    //Begin variables execution
    private int rowSelected;
    private Clasificador clasificadorSelected;
    private Almacen almacenSelected;
    private BeanTableModel<Clasificador> clasificadorBeanTableModel;
    private BeanTableModel<Almacen> almacenesBeanTableModel;

}
