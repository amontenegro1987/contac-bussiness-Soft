/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * pnlAdmonAlmacen.java
 *
 * Created on Jul 25, 2011, 8:08:24 PM
 */
package contac.administracion.compania.app;

import contac.administracion.controller.AdministraAlmacenController;
import contac.commons.form.label.JOptionErrorPane;
import contac.commons.form.panel.GenericFrame;
import contac.commons.models.comboBox.ComboBoxEmptySelectionRenderer;
import contac.internationalization.LanguageLocale;
import contac.commons.models.comboBox.PaisComboBoxModel;
import contac.commons.models.comboBox.TipoAlmacenComboBoxModel;
import contac.modelo.entity.Almacen;
import contac.modelo.entity.Pais;
import contac.modelo.entity.TiposAlmacen;
import contac.text.TextUtil;
import contac.web.WebUtil;
import org.apache.log4j.Logger;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ResourceBundle;

/**
 * @author Eddy Montenegro
 */
public class pnlAdmonAlmacen extends JDialog {

    //Logger
    private static final Logger logger = Logger.getLogger(pnlAdmonAlmacen.class);

    //Message Resource Bundle
    private ResourceBundle messageBundle = ResourceBundle.getBundle("contac/administracion/app/mensajes/Mensajes",
            LanguageLocale.getInstance().getLocale());

    //Controller
    private AdministraAlmacenController controller;

    //Variable de edicion de registros
    private boolean edit = false;

    /**
     * Creates new form pnlAdmonAlmacen
     */
    public pnlAdmonAlmacen(GenericFrame frame, boolean modal) {

        //Call super constructor
        super(frame, modal);

        //Setting Controller
        this.controller = new AdministraAlmacenController();

        //Init components
        initComponents();

        //Init registro
        this.controller.init();

        //Init values
        initValues();

        //Register listeners
        registerListeners();

        //Setting values size and visibility
        this.setTitle(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES"));
        this.setSize(new Dimension(600, 550));
        this.setLocationRelativeTo(null);
        this.setVisible(true);

    }

    /**
     * Creates a new form pnlAdmonAlmacen for editing
     *
     * @param frame,   GenericFrame
     * @param almacen, Almacen
     * @param modal,   boolean
     */
    public pnlAdmonAlmacen(GenericFrame frame, Almacen almacen, boolean modal) {

        //Call super constructor
        super(frame, modal);

        //Setting controller
        this.controller = new AdministraAlmacenController();

        //Init components
        initComponents();

        //Setting almacen editing
        this.controller.setAlmacen(almacen);

        //Init modificacion
        this.controller.initModificacion();

        //Init Values
        initValues();

        //Edit
        edit = true;

        //Setting values size and visibility
        this.setTitle(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES"));
        this.setSize(new Dimension(600, 550));
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAcciones = new javax.swing.JPanel();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        pnlAlmacenForm = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblTipoAlmacen = new javax.swing.JLabel();
        cmbTipoAlmacen = new javax.swing.JComboBox();
        lblSerie = new javax.swing.JLabel();
        txtSerie = new javax.swing.JTextField();
        lblDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        lblReferencia = new javax.swing.JLabel();
        txtReferencia = new javax.swing.JTextField();
        lblAutorizacionRenta = new javax.swing.JLabel();
        txtAutorizacionRenta = new javax.swing.JTextField();
        lblNoConsecutivo = new javax.swing.JLabel();
        txtNoConsecutivo = new javax.swing.JTextField();
        lblPais = new javax.swing.JLabel();
        cmbPais = new javax.swing.JComboBox();
        txtEstado = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        lblCiudad = new javax.swing.JLabel();
        lblCodigoPostal = new javax.swing.JLabel();
        txtCodigoPostal = new javax.swing.JTextField();
        spDireccion = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        lblDireccion = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtWeb = new javax.swing.JTextField();
        lblWeb = new javax.swing.JLabel();
        pnlTelefonos = new javax.swing.JPanel();
        txtTelefonoOficina = new javax.swing.JTextField();
        txtTelefonoMovil = new javax.swing.JTextField();
        txtFax = new javax.swing.JTextField();
        lblTelefonoOficina = new javax.swing.JLabel();
        lblTelefonoMovil = new javax.swing.JLabel();
        lblFax = new javax.swing.JLabel();
        almacenHeader = new org.jdesktop.swingx.JXHeader();

        pnlAcciones.setPreferredSize(new java.awt.Dimension(755, 60));
        pnlAcciones.setRequestFocusEnabled(false);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("contac/administracion/app/mensajes/Mensajes_es"); // NOI18N
        btnAceptar.setText(bundle.getString("CONTAC.FORM.BTNACEPTAR")); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText(bundle.getString("CONTAC.FORM.BTNCANCELAR")); // NOI18N
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAccionesLayout = new javax.swing.GroupLayout(pnlAcciones);
        pnlAcciones.setLayout(pnlAccionesLayout);
        pnlAccionesLayout.setHorizontalGroup(
            pnlAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccionesLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addContainerGap(216, Short.MAX_VALUE))
        );
        pnlAccionesLayout.setVerticalGroup(
            pnlAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAccionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAccionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnAceptar))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(pnlAcciones, java.awt.BorderLayout.SOUTH);

        pnlAlmacenForm.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCodigo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigo.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.CODIGOALMACEN")); // NOI18N
        lblCodigo.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 12, 91, -1));

        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pnlAlmacenForm.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 11, 179, 23));

        lblTipoAlmacen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTipoAlmacen.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.TIPOALMACEN")); // NOI18N
        lblTipoAlmacen.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblTipoAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 12, 85, -1));

        cmbTipoAlmacen.setModel(new TipoAlmacenComboBoxModel(TiposAlmacen.values()));
        pnlAlmacenForm.add(cmbTipoAlmacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(373, 11, 160, 23));

        lblSerie.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSerie.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.SERIEALMACEN")); // NOI18N
        lblSerie.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(392, 70, -1, -1));
        pnlAlmacenForm.add(txtSerie, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 69, 88, 23));

        lblDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDescripcion.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.DESCRIPCIONALMACEN")); // NOI18N
        lblDescripcion.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 91, -1));
        pnlAlmacenForm.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 40, 432, 23));

        lblReferencia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblReferencia.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.REFERENCIAALMACEN")); // NOI18N
        lblReferencia.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 91, -1));
        pnlAlmacenForm.add(txtReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(101, 69, 291, 23));

        lblAutorizacionRenta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAutorizacionRenta.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.AUTORIZACIONCOMERCIAL")); // NOI18N
        lblAutorizacionRenta.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblAutorizacionRenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 99, 119, -1));
        pnlAlmacenForm.add(txtAutorizacionRenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(384, 98, 149, 23));

        lblNoConsecutivo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNoConsecutivo.setText(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.CONSECUTIVOALMACEN")); // NOI18N
        lblNoConsecutivo.setPreferredSize(new java.awt.Dimension(43, 20));
        pnlAlmacenForm.add(lblNoConsecutivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 99, 91, -1));

        txtNoConsecutivo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        pnlAlmacenForm.add(txtNoConsecutivo, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 98, 148, 23));

        lblPais.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPais.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.PAIS")); // NOI18N
        pnlAlmacenForm.add(lblPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 128, 91, 20));

        cmbPais.setModel(new PaisComboBoxModel(controller.getPaises()));
        cmbPais.setOpaque(false);
        pnlAlmacenForm.add(cmbPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 127, 190, 23));
        pnlAlmacenForm.add(txtEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 127, 150, 23));

        lblEstado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEstado.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.ESTADO")); // NOI18N
        pnlAlmacenForm.add(lblEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 128, 50, 20));
        pnlAlmacenForm.add(txtCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 157, 190, 23));

        lblCiudad.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCiudad.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CIUDAD")); // NOI18N
        pnlAlmacenForm.add(lblCiudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 158, 91, 20));

        lblCodigoPostal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigoPostal.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.CODIGOPOSTAL")); // NOI18N
        pnlAlmacenForm.add(lblCodigoPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(303, 158, 70, 20));
        pnlAlmacenForm.add(txtCodigoPostal, new org.netbeans.lib.awtextra.AbsoluteConstraints(383, 157, 150, 23));

        txtDireccion.setColumns(20);
        txtDireccion.setLineWrap(true);
        txtDireccion.setRows(5);
        txtDireccion.setWrapStyleWord(true);
        spDireccion.setViewportView(txtDireccion);

        pnlAlmacenForm.add(spDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 187, 430, 50));

        lblDireccion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDireccion.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.DIRECCION")); // NOI18N
        pnlAlmacenForm.add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 187, 91, 20));

        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.EMAIL")); // NOI18N
        pnlAlmacenForm.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 247, 91, 20));
        pnlAlmacenForm.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 247, 430, 23));
        pnlAlmacenForm.add(txtWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(103, 277, 430, 23));

        lblWeb.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblWeb.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.WEB")); // NOI18N
        pnlAlmacenForm.add(lblWeb, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 277, 91, 20));

        pnlTelefonos.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TELEFONOS"))); // NOI18N
        pnlTelefonos.setToolTipText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.TELEFONOS")); // NOI18N
        pnlTelefonos.setName(""); // NOI18N

        lblTelefonoOficina.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.OFICINA")); // NOI18N

        lblTelefonoMovil.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.MOVIL")); // NOI18N

        lblFax.setText(bundle.getString("CONTAC.FORM.ADMINISTRACOMPANIA.FAX")); // NOI18N

        javax.swing.GroupLayout pnlTelefonosLayout = new javax.swing.GroupLayout(pnlTelefonos);
        pnlTelefonos.setLayout(pnlTelefonosLayout);
        pnlTelefonosLayout.setHorizontalGroup(
            pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTelefonosLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefonoOficina, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefonoOficina))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelefonoMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefonoMovil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFax)
                    .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        pnlTelefonosLayout.setVerticalGroup(
            pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTelefonosLayout.createSequentialGroup()
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefonoOficina)
                    .addComponent(lblTelefonoMovil)
                    .addComponent(lblFax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(pnlTelefonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelefonoOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoMovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlAlmacenForm.add(pnlTelefonos, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 307, -1, -1));

        getContentPane().add(pnlAlmacenForm, java.awt.BorderLayout.CENTER);

        almacenHeader.setForeground(new java.awt.Color(255, 153, 0));
        almacenHeader.setPreferredSize(new java.awt.Dimension(51, 35));
        almacenHeader.setTitle(bundle.getString("CONTAC.FORM.ADMINISTRAALMACENES")); // NOI18N
        almacenHeader.setTitleForeground(new java.awt.Color(255, 153, 0));
        getContentPane().add(almacenHeader, java.awt.BorderLayout.NORTH);
    }// </editor-fold>//GEN-END:initComponents

    public void initValues() { //<BEGIN> init values components>

        //<Codigo>
        txtCodigo.setText(controller.getCodigo() == 0 ? "" : String.valueOf(controller.getCodigo()));
        //<Tipo almacen>
        ListCellRenderer rendererTipoAlmacen = new ComboBoxEmptySelectionRenderer(cmbTipoAlmacen, messageBundle.getString("CONTAC.FORM.MSG.SELECCIONE"));
        if (controller.getTipoAlmacen() != null) {
            TipoAlmacenComboBoxModel tipoAlmacenModel = (TipoAlmacenComboBoxModel) cmbTipoAlmacen.getModel();
            cmbTipoAlmacen.setRenderer(rendererTipoAlmacen);
            cmbTipoAlmacen.setSelectedItem(tipoAlmacenModel.searchSelectedItem(controller.getTipoAlmacen().getValue()));
        } else {
            cmbTipoAlmacen.setRenderer(rendererTipoAlmacen);
            cmbTipoAlmacen.setSelectedIndex(-1);
        }
        //<Descripcion>
        txtDescripcion.setText(controller.getDescripcion());
        //<Referencia>
        txtReferencia.setText(controller.getReferencia());
        //<Serie>
        txtSerie.setText(controller.getSerie());
        //<No consecutivo>
        txtNoConsecutivo.setText(controller.getConsecutivo() == 0 ? "" : String.valueOf(controller.getConsecutivo()));
        //<No autorizacion renta>
        txtAutorizacionRenta.setText(String.valueOf(controller.getNoAutorizacionComercial()));
        //<Pais>
        ListCellRenderer rendererPais = new ComboBoxEmptySelectionRenderer(cmbPais, messageBundle.getString("CONTAC.FORM.MSG.SELECCIONE"));
        if (controller.getPais() != null) {
            PaisComboBoxModel paisModel = (PaisComboBoxModel) cmbPais.getModel();
            cmbPais.setRenderer(rendererPais);
            cmbPais.setSelectedItem(paisModel.searchSelectedItem(controller.getPais().getId()));
        } else {
            cmbPais.setRenderer(rendererPais);
            cmbPais.setSelectedIndex(-1);
        }
        //<Estado>
        txtEstado.setText(controller.getEstado());
        //<Ciudad>
        txtCiudad.setText(controller.getCiudad());
        //<Codigo postal>
        txtCodigoPostal.setText(controller.getCodigoPostal());
        //<Direccion>
        txtDireccion.setText(controller.getDireccion());
        //<Email>
        txtEmail.setText(controller.getEmail());
        //<Web>
        txtWeb.setText(controller.getWeb());
        //<Telefono oficina>
        txtTelefonoOficina.setText(controller.getTelefonoOficina());
        //<Telefono movil>
        txtTelefonoMovil.setText(controller.getTelefonoMovil());
        //<Fax>
        txtFax.setText(controller.getFax());

        //<Set selected item>
        txtCodigo.requestFocusInWindow();
        txtCodigo.selectAll();

    } //END: Value components

    private void registerListeners() { //BEGIN: register listeners

        //*****************************************************************************
        //<Register listeners>
        //*****************************************************************************

        //<txtCodigo>
        txtCodigo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    cmbTipoAlmacen.requestFocusInWindow();
                }
            }
        });

        //<CmbTipoAlmacen>
        cmbTipoAlmacen.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    txtDescripcion.requestFocusInWindow();
                    txtDescripcion.selectAll();
                }
            }
        });

        //<txtDescripcion>
        txtDescripcion.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtReferencia.requestFocusInWindow();
                    txtReferencia.selectAll();
                }
            }
        });

        //<txtSerie>
        txtSerie.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtNoConsecutivo.requestFocusInWindow();
                    txtNoConsecutivo.selectAll();
                }
            }
        });

        //<txtNoConsecutivo>
        txtNoConsecutivo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtAutorizacionRenta.requestFocusInWindow();
                    txtAutorizacionRenta.selectAll();
                }
            }
        });

        //<txtAutorizacionRenta>
        txtAutorizacionRenta.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (e.VK_ENTER == e.getKeyChar()) {
                    cmbPais.requestFocusInWindow();
                }
            }
        });

        //<cmbPais>
        cmbPais.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    txtEstado.requestFocusInWindow();
                }
            }
        });

        //<txtEstado>
        txtEstado.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtCiudad.requestFocusInWindow();
                    txtCiudad.selectAll();
                }
            }
        });

        //<txtCiudad>
        txtCiudad.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtCodigoPostal.requestFocusInWindow();
                    txtCodigoPostal.selectAll();
                }
            }
        });

        //<TxtCodigoPostal>
        txtCodigoPostal.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtDireccion.requestFocusInWindow();
                    txtDireccion.selectAll();
                }
            }
        });

        //<txtDireccion>
        txtDireccion.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtEmail.requestFocusInWindow();
                    txtEmail.selectAll();
                }
            }
        });

        //<txtEmail>
        txtEmail.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (e.VK_ENTER == e.getKeyChar()) {
                    txtWeb.requestFocusInWindow();
                    txtWeb.selectAll();
                }
            }
        });

        //<txtWeb>
        txtWeb.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtTelefonoOficina.requestFocusInWindow();
                    txtTelefonoOficina.selectAll();
                }
            }
        });

        //<txtTelefonoOficina>
        txtTelefonoOficina.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtTelefonoMovil.requestFocusInWindow();
                    txtTelefonoMovil.selectAll();
                }
            }
        });

        //<txtTelefonoMovil>
        txtTelefonoMovil.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    txtFax.requestFocusInWindow();
                    txtFax.selectAll();
                }
            }
        });

        //<txtFax>
        txtFax.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (e.VK_ENTER == e.getKeyChar()) {
                    btnAceptar.requestFocusInWindow();
                }
            }
        });

    } //END: register listeners

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        //Validar datos ingresados
        try {

            validaDatosForm();

            //Setting values to controller
            controller.setCodigo(Integer.parseInt(txtCodigo.getText()));
            controller.setTipoAlmacen(((TiposAlmacen) ((TipoAlmacenComboBoxModel) cmbTipoAlmacen.getModel()).
                    getSelectedItem().getObject()));
            controller.setSerie(txtSerie.getText());
            controller.setDescripcion(txtDescripcion.getText());
            controller.setConsecutivo(Long.parseLong(txtNoConsecutivo.getText()));
            controller.setReferencia(txtReferencia.getText());
            controller.setNoAutorizacionComercial(txtAutorizacionRenta.getText());
            controller.setPais((Pais) ((PaisComboBoxModel) cmbPais.getModel()).getSelectedItem().getObject());
            controller.setEstado(txtEstado.getText());
            controller.setCiudad(txtCiudad.getText());
            controller.setCodigoPostal(txtCodigoPostal.getText());
            controller.setDireccion(txtDireccion.getText());
            controller.setEmail(txtEmail.getText());
            controller.setWeb(txtWeb.getText());
            controller.setTelefonoOficina(txtTelefonoOficina.getText());
            controller.setTelefonoMovil(txtTelefonoMovil.getText());
            controller.setFax(txtFax.getText());

            //<Registrar nuevo almacen>
            if (!edit) {

                controller.registrarAlmacen();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.INGRESO.EXITOSO"),
                        messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.INGRESO.EXITOSO"));
            }

            //<Modificar almacen existente>
            if (edit) {

                controller.modificarAlmacen();

                //Show confirmation message
                JOptionErrorPane.showMessageInfo(null, messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.MODIFICA.EXITOSO"),
                        messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.MODIFICA.EXITOSO"));
            }

            //Close this form
            this.dispose();

        } catch (Exception e) {
            JOptionErrorPane.showMessageError(null, messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.VALIDA"),
                    e.getMessage());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //Limpiar formulario
        limpiarFormulario();
    }//GEN-LAST:event_btnCancelarActionPerformed

    //Limpiar datos formulario
    private void limpiarFormulario() {
        txtCodigo.setText("");
        cmbTipoAlmacen.setSelectedItem(0);
        txtSerie.setText("");
        txtDescripcion.setText("");
        txtNoConsecutivo.setText("");
        txtReferencia.setText("");
        txtAutorizacionRenta.setText("");
        cmbPais.setSelectedItem(0);
        txtEstado.setText("");
        txtCiudad.setText("");
        txtCodigoPostal.setText("");
        txtDireccion.setText("");
        txtEmail.setText("");
        txtWeb.setText("");
        txtTelefonoOficina.setText("");
        txtTelefonoMovil.setText("");
        txtFax.setText("");
    }

    //Valida datos formulario
    private void validaDatosForm() throws Exception {

        if (txtCodigo.getText().equals("")) {
            //Request focus
            txtCodigo.requestFocusInWindow();
            txtCodigo.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.CODIGO.VALIDA"));
        }

        if (cmbTipoAlmacen.getSelectedIndex() == -1) {
            //Request focus
            cmbTipoAlmacen.requestFocusInWindow();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.TIPOALMACEN.VALIDA"));
        }

        if (txtDescripcion.getText().equals("")) {
            //Request focus
            txtDescripcion.requestFocusInWindow();
            txtDescripcion.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.DESCRIPCION.VALIDA"));
        }

        if (txtReferencia.getText().equals("")) {
            //Request focus
            txtReferencia.requestFocusInWindow();
            txtReferencia.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.REFERENCIA.VALIDA"));
        }

        if (txtSerie.getText().equals("")) {
            //Request focus
            txtSerie.requestFocusInWindow();
            txtSerie.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.SERIE.VALIDA"));
        }

        if (txtSerie.getText().length() > 1) {
            //Request focus
            txtSerie.requestFocusInWindow();
            txtSerie.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.SERIE.VALIDA.LONGITUD"));
        }

        if (txtSerie.getText().length() > 1) {
            //Request focus
            txtSerie.requestFocusInWindow();
            txtSerie.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.SERIE.VALIDA.LONGITUD"));
        }

        if (txtNoConsecutivo.getText().equals("")) {
            //Request focus
            txtNoConsecutivo.requestFocusInWindow();
            txtNoConsecutivo.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.CONSECUTIVO.VALIDA"));
        }

        if (cmbPais.getSelectedIndex() == -1) {
            //Request focus
            cmbPais.requestFocusInWindow();
            //Throw error message
            throw new Exception(messageBundle.getString(" = PAIS es un campo obligatorio."));
        }

        if (txtEstado.getText().equals("")) {
            //Request focus
            txtEstado.requestFocusInWindow();
            txtEstado.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.ESTADO.VALIDA"));
        }

        if (txtCiudad.getText().equals("")) {
            //Request focus
            txtCiudad.requestFocusInWindow();
            txtCiudad.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.CIUDAD.VALIDA"));
        }

        if (txtDireccion.getText().equals("")) {
            //Request focus
            txtDireccion.requestFocusInWindow();
            txtDireccion.selectAll();
            //Throw error message
            throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.DIRECCION_2.VALIDA"));
        }

        if (!txtEmail.getText().equals("")) {

            if (!WebUtil.isValidEmailAddress(txtEmail.getText())) {
                //Request focus
                txtEmail.requestFocusInWindow();
                txtEmail.selectAll();
                //Throw error message
                throw new Exception(messageBundle.getString("CONTAC.FORM.ADMINISTRAALMACENES.EMAIL.VALIDA"));
            }
        }
    }

    /**
     * Return almacen inserted or updated
     *
     * @return Almacen
     */
    public Almacen getAlmacen() {
        return controller.getAlmacen();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXHeader almacenHeader;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox cmbPais;
    private javax.swing.JComboBox cmbTipoAlmacen;
    private javax.swing.JLabel lblAutorizacionRenta;
    private javax.swing.JLabel lblCiudad;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCodigoPostal;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblFax;
    private javax.swing.JLabel lblNoConsecutivo;
    private javax.swing.JLabel lblPais;
    private javax.swing.JLabel lblReferencia;
    private javax.swing.JLabel lblSerie;
    private javax.swing.JLabel lblTelefonoMovil;
    private javax.swing.JLabel lblTelefonoOficina;
    private javax.swing.JLabel lblTipoAlmacen;
    private javax.swing.JLabel lblWeb;
    private javax.swing.JPanel pnlAcciones;
    private javax.swing.JPanel pnlAlmacenForm;
    private javax.swing.JPanel pnlTelefonos;
    private javax.swing.JScrollPane spDireccion;
    private javax.swing.JTextField txtAutorizacionRenta;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoPostal;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtFax;
    private javax.swing.JTextField txtNoConsecutivo;
    private javax.swing.JTextField txtReferencia;
    private javax.swing.JTextField txtSerie;
    private javax.swing.JTextField txtTelefonoMovil;
    private javax.swing.JTextField txtTelefonoOficina;
    private javax.swing.JTextField txtWeb;
    // End of variables declaration//GEN-END:variables
}
