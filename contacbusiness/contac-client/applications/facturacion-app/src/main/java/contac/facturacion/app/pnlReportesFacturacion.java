/**
 * Copyright 2012 Contac Business Software. All rights reserved.
 * CONTAC PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */

/*
 * pnlReportesFacturacion.java
 *
 * Created on 10-10-2012, 11:47:28 AM
 */
package contac.facturacion.app;
import contac.commons.form.label.JOptionErrorPane;
import contac.commons.form.panel.GenericFrame;
import contac.commons.form.panel.GenericPanel;
import contac.commons.models.comboBox.AlmacenComboBoxModel;
import contac.commons.models.comboBox.ComboBoxEmptySelectionRenderer;
import contac.commons.models.tables.BeanTableModel;
import contac.facturacion.controller.AgenteVentasController;
import contac.internationalization.LanguageLocale;
import contac.modelo.entity.AgenteVentas;
import contac.modelo.entity.Almacen;
import contac.text.TextUtil;
import org.apache.log4j.Logger;
import org.jdesktop.swingx.JXDatePicker;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableColumnModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;
import contac.reports.JRPrintReport;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import java.rmi.RemoteException;
import java.text.MessageFormat;
import java.util.*;
/**
 *
 * @author emortiz
 */
public class pnlReportesFacturacion extends GenericPanel {

    //Apache Log4j
    private static final Logger logger = Logger.getLogger(pnlFacturaCliente.class);

    //Controller
    private AgenteVentasController controller;

    //Message resource bundle
    private ResourceBundle messageBundle = ResourceBundle.getBundle("contac/facturacion/app/mensajes/Mensajes",
            LanguageLocale.getInstance().getLocale());

    /** Creates new form pnlReortesFacturacion */
    public pnlReportesFacturacion(GenericFrame frame) {

        //Call super constructor
        super(frame, "reportesFacturacion", "Reportes Facturación", true, "contac/facturacion/app/mensajes/Mensajes",
                new Locale("es", "NI"));

        //Init controller
        controller = new AgenteVentasController();

        //Init controller values
        controller.init();

        //Init components
        initComponents();

        //Init values
        initValues();

        //Register listeners
        registerListeners();

        //Editar registros
        controller.set_edit(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new org.jdesktop.swingx.JXHeader();
        frmReportesFacturacion = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblCodigoHasta = new javax.swing.JLabel();
        txtCodigoHasta = new javax.swing.JTextField();
        txtAnyo = new javax.swing.JTextField();
        lblFechaDesde = new javax.swing.JLabel();
        lblFechaHasta = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblAlmacen = new javax.swing.JLabel();
        lblanyo = new javax.swing.JLabel();
        cmbAlmacen = new javax.swing.JComboBox();
        chkActivo = new javax.swing.JCheckBox();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        frmDetalleReporteFacturacion = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();

        String subject[]={"Venta de Productos Mensual", "Venta de productos Por Línea", "Informe de Comisiones"};

        listReportes = new javax.swing.JList(subject);

        ListSelectionListener listSelectionListener = new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent listSelectionEvent){
                boolean adjust = listSelectionEvent.getValueIsAdjusting();
                if(!adjust) {
                    JList list = (JList) listSelectionEvent.getSource();
                    int selections[] = list.getSelectedIndices();
                    Object selectionValues[] = list.getSelectedValues();
                    for(int i = 0, n= selections.length; i<n; i++){
                        if(selectionValues[i]== "Venta de Productos Mensual"){
                        dtpFechaDesde.setEnabled(false);
                        dtpFechaHasta.setEnabled(false);
                        cmbAlmacen.setEnabled(false);
                        txtCodigo.setEnabled(true);
                        txtCodigoHasta.setEnabled(true);
                        }
                        else if(selectionValues[i]== "Venta de productos Por Línea"){
                            dtpFechaDesde.setEnabled(false);
                            dtpFechaHasta.setEnabled(false);
                            cmbAlmacen.setEnabled(false);
                            txtCodigo.setEnabled(false);
                            txtCodigoHasta.setEnabled(false);
                        }
                        else{

                        }
                    }

                }
            }
        };

        listReportes.addListSelectionListener(listSelectionListener);

        setLayout(new java.awt.BorderLayout());

        header.setForeground(new java.awt.Color(255, 153, 0));
        header.setPreferredSize(new java.awt.Dimension(51, 35));
        header.setScrollableTracksViewportWidth(false);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("contac/facturacion/app/mensajes/Mensajes_es"); // NOI18N
        header.setTitle(bundle.getString("CONTAC.FORM.REPORTESFACTURACION.TITTLE")); // NOI18N
        header.setTitleForeground(new java.awt.Color(255, 153, 0));
        add(header, java.awt.BorderLayout.PAGE_START);

        frmReportesFacturacion.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.PARAMETROS"))); // NOI18N

        lblCodigo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigo.setText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.CODIGODESDE")); // NOI18N

        lblCodigoHasta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCodigoHasta.setText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.CODIGOHASTA")); // NOI18N

        dtpFechaDesde = new JXDatePicker();
        dtpFechaHasta = new JXDatePicker();

        lblFechaDesde.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFechaDesde.setText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.FECHADESDE")); // NOI18N    }// </editor-fold>//GEN-END:initComponents

        lblFechaHasta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFechaHasta.setText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.FECHAHASTA")); // NOI18N    }// </editor-fold>//GEN-END:initComponents

        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCodigo.setToolTipText(bundle.getString("CONTAC.FORM.AGENTEVENTAS.CODIGO")); // NOI18N
        txtCodigo.setMinimumSize(new java.awt.Dimension(6, 25));
        txtCodigo.setPreferredSize(new java.awt.Dimension(60, 30));

        txtCodigoHasta.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtCodigoHasta.setToolTipText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.CODIGOHASTA")); // NOI18N
        txtCodigoHasta.setMinimumSize(new java.awt.Dimension(6, 25));
        txtCodigoHasta.setPreferredSize(new java.awt.Dimension(60, 30));

        txtAnyo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAnyo.setToolTipText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.ANYOBUSQUEDA")); // NOI18N
        txtAnyo.setMinimumSize(new java.awt.Dimension(6, 25));
        txtAnyo.setPreferredSize(new java.awt.Dimension(60, 30));


        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText(bundle.getString("CONTAC.FORM.AGENTEVENTAS.NOMBRE")); // NOI18N

        txtNombre.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtNombre.setToolTipText(bundle.getString("CONTAC.FORM.AGENTEVENTAS.NOMBRE")); // NOI18N
        txtNombre.setMinimumSize(new java.awt.Dimension(6, 25));
        txtNombre.setPreferredSize(new java.awt.Dimension(60, 30));

        lblAlmacen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAlmacen.setText(bundle.getString("CONTAC.FORM.FACTURACION.ALMACEN")); // NOI18N

        lblanyo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblanyo.setText(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.ANYO")); // NOI18N

        cmbAlmacen.setModel(new AlmacenComboBoxModel(controller.getAlmacenes()));
        cmbAlmacen.setToolTipText(bundle.getString("CONTAC.FORM.FACTURACION.ALMACEN")); // NOI18N

        chkActivo.setText(bundle.getString("CONTAC.FORM.AGENTEVENTAS.ESTADO")); // NOI18N
        chkActivo.setToolTipText(bundle.getString("CONTAC.FORM.AGENTEVENTAS.ESTADO")); // NOI18N

        btnAceptar.setText(bundle.getString("CONTAC.FORM.BTNACEPTAR")); // NOI18N
        btnAceptar.setActionCommand(""); // NOI18N
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setText(bundle.getString("CONTAC.FORM.BTNCANCELAR")); // NOI18N
        btnCancelar.setActionCommand("");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmReportesFacturacionLayout = new javax.swing.GroupLayout(frmReportesFacturacion);
        frmReportesFacturacion.setLayout(frmReportesFacturacionLayout);
        frmReportesFacturacionLayout.setHorizontalGroup(
                frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(lblCodigoHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCodigoHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(dtpFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(lblFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dtpFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(cmbAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(lblanyo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(txtAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        frmReportesFacturacionLayout.setVerticalGroup(
                frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(lblCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(lblCodigoHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCodigoHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(lblFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(dtpFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(lblFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dtpFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6)
                                .addGroup(frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(lblAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(cmbAlmacen, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                )
                                .addGap(6, 6, 6)

                                .addGroup(frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(frmReportesFacturacionLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(lblanyo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                )
                                .addGap(6, 6, 6)
                                .addGroup(frmReportesFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnAceptar)
                                        .addComponent(btnCancelar)))
        );

        lblCodigo.getAccessibleContext().setAccessibleName("");
        lblCodigoHasta.getAccessibleContext().setAccessibleName("");
        lblFechaDesde.getAccessibleContext().setAccessibleName("");
        lblFechaHasta.getAccessibleContext().setAccessibleName("");
        btnAceptar.getAccessibleContext().setAccessibleName("");

        add(frmReportesFacturacion, java.awt.BorderLayout.CENTER);

        //frmDetalleReporteFacturacion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frmDetalleReporteFacturacion.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("CONTAC.FORM.REPORTEFACTURACION.INFORME")));
        frmDetalleReporteFacturacion.setPreferredSize(new java.awt.Dimension(250, 208));

        scrollPane.setViewportView(listReportes);

        javax.swing.GroupLayout frmDetalleReporteFacturacionLayout = new javax.swing.GroupLayout(frmDetalleReporteFacturacion);
        frmDetalleReporteFacturacion.setLayout(frmDetalleReporteFacturacionLayout);
        frmDetalleReporteFacturacionLayout.setHorizontalGroup(
                frmDetalleReporteFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(frmDetalleReporteFacturacionLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        frmDetalleReporteFacturacionLayout.setVerticalGroup(
                frmDetalleReporteFacturacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(frmDetalleReporteFacturacionLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                                .addContainerGap())
        );

        add(frmDetalleReporteFacturacion, java.awt.BorderLayout.WEST);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void initValues() {
        //Init campos de busqueda
        dtpFechaDesde.setFormats("dd/MM/yyyy");
        dtpFechaDesde.setDate(new Date());

        dtpFechaHasta.setFormats("dd/MM/yyyy");
        dtpFechaHasta.setDate(new Date());

        try {

            //Almacen de asignacion
            ListCellRenderer rendererAlmacen = new ComboBoxEmptySelectionRenderer(cmbAlmacen, messageBundle.getString("CONTAC.FORM.MSG.SELECCIONE"));
            if (controller.getAlmacen() != null) {
                AlmacenComboBoxModel almacenModel = (AlmacenComboBoxModel) cmbAlmacen.getModel();
                cmbAlmacen.setRenderer(rendererAlmacen);
                cmbAlmacen.setSelectedItem(almacenModel.searchSelectedItem(controller.getAlmacen().getId()));
            } else {
                cmbAlmacen.setRenderer(rendererAlmacen);
                cmbAlmacen.setSelectedIndex(-1);
            }
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
            //Show confirmation message
            JOptionErrorPane.showMessageError(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR.INIT"),
                    e.getMessage());
        }
    }

    //Iniciar la carga de datos del controller
    private void cargarDatos() {

        //Evaluar edit datos para registrar
        if (!controller.is_edit()) {

            //Set editable true
            txtCodigo.setEditable(true);

            //Cambiar label del boton aceptar
            btnAceptar.setText(messageBundle.getString("CONTAC.FORM.BTNACEPTAR"));
        }

        if (controller.is_edit()) {

            //Set editable false
            txtCodigo.setEditable(false);

            //Cambiar label del boton modificar
            btnAceptar.setText(messageBundle.getString("CONTAC.FORM.BTNMODIFICAR"));
        }

        //Almacen
        if (controller.getAlmacen() != null) {
            cmbAlmacen.setSelectedItem(((AlmacenComboBoxModel)cmbAlmacen.getModel()).searchSelectedItem(controller.getAlmacen().getId()));
        } else {
            cmbAlmacen.setSelectedIndex(-1);
        }

        //Setting focus
        txtCodigo.requestFocusInWindow();
    }

    //Register listeners
    private void registerListeners() {

        //*****************************************************************************
        //<Register listeners>
        //*****************************************************************************

        //<txtCodigo>
        txtCodigo.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!TextUtil.isValidDigit(e.getKeyChar())) {
                    e.consume();
                }

                if (KeyEvent.VK_ENTER == e.getKeyChar()) {
                    txtNombre.requestFocusInWindow();
                }
            }
        });

        //<txtNombre>
        txtNombre.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {
                if (!TextUtil.isValidCharacter(e.getKeyChar())) {
                    e.consume();
                }

                if (KeyEvent.VK_ENTER == e.getKeyChar()) {
                    cmbAlmacen.requestFocusInWindow();
                }
            }
        });

        //<cmbAlmacen>
        cmbAlmacen.addKeyListener(new KeyAdapter() {
            @Override
            public void keyTyped(KeyEvent e) {

                if (KeyEvent.VK_ENTER == e.getKeyChar()) {
                    btnAceptar.requestFocusInWindow();
                }
            }
        });
    }

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
       // listReportes.getSelectedValues();

        ListModel modelo = listReportes.getModel();

        for(int index : listReportes.getSelectedIndices()){
            if(modelo.getElementAt(index)== "Venta de Productos Mensual"){
                dtpFechaDesde.setEnabled(false);
                try{
               if(txtCodigo.getText().equals("")){
                   throw new Exception(messageBundle.getString("CONTAC.FORM.REPORTEFACTURACION.CODIGODESDE_VALIDA"));
               }
               if(txtCodigoHasta.getText().equals("")){
                   throw new Exception(messageBundle.getString("CONTAC.FORM.REPORTEFACTURACION.CODIGOHASTA_VALIDA"));
               }
               if(txtAnyo.getText().equals("")){
                   throw new Exception(messageBundle.getString("CONTAC.FORM.REPORTEFACTURACION.ANYO_VALIDA"));
               }
                  // Prepared Jasper Report
                  JasperReport report = (JasperReport) JRLoader.loadObject(pnlReportesFacturacion.class
                          .getResourceAsStream("/contac/facturacion/app/reportes/ventas_mensuales_productos_report.jasper"));

                  Map parameters = new HashMap();
                  parameters.put("SUBREPORT_DIR", getClass().getClassLoader().getResource("contac/facturacion/app/reportes") + "/");
                  parameters.put("p_codigo_desde", txtCodigo.getText());
                  parameters.put("p_codigo_hasta", txtCodigoHasta.getText());
                  parameters.put("anyo_busqueda", txtAnyo.getText());

                  //Generate Report
                  JasperPrint jasperPrint = controller.getMgrReportesService().generateReport(parameters, report);

                  //Print Report Preview
                  JRPrintReport.printPreviewReport(getMDI(), jasperPrint);

              } catch (JRException e) {
                  logger.error(e.getMessage(), e);
                  //Show error message
                  JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
              } catch (RemoteException e) {
                  logger.error(e.getMessage(), e);
                  //Show error message
                  JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
              } catch (Exception e) {
                  logger.error(e.getMessage(), e);
                  //Show error message
                  JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
                 }
            }
            else if(modelo.getElementAt(index)== "Venta de productos Por Línea"){

                try{
                if(txtAnyo.getText().equals("")){
                    throw new Exception(messageBundle.getString("CONTAC.FORM.REPORTEFACTURACION.ANYO_VALIDA"));
                }
                    // Prepared Jasper Report
                    JasperReport report = (JasperReport) JRLoader.loadObject(pnlReportesFacturacion.class
                    .getResourceAsStream("/contac/facturacion/app/reportes/ventas_mensuales_por_linea_dep.jasper"));

                    Map parameters = new HashMap();
                    parameters.put("SUBREPORT_DIR", getClass().getClassLoader().getResource("contac/facturacion/app/reportes") + "/");
                    parameters.put("anyo_busqueda", txtAnyo.getText());
                    //Generate Report
                    JasperPrint jasperPrint = controller.getMgrReportesService().generateReport(parameters, report);

                    //Print Report Preview
                    JRPrintReport.printPreviewReport(getMDI(), jasperPrint);

                } catch (JRException e) {
                    logger.error(e.getMessage(), e);
                    //Show error message
                    JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
                } catch (RemoteException e) {
                    logger.error(e.getMessage(), e);
                    //Show error message
                    JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
                } catch (Exception e) {
                    logger.error(e.getMessage(), e);
                    //Show error message
                    JOptionErrorPane.showMessageWarning(null, messageBundle.getString("CONTAC.FORM.MSG.ERROR"), e.getMessage());
                }
                }  else{
                //Show confirmation message
                JOptionErrorPane.showMessageInfo(this.getMDI(), messageBundle.getString("CONTAC.FORM.MSG.CONFIRMACION"),
                        messageBundle.getString("CONTAC.FORM.REPORTEFACTURACION.DESELECTED"));
            }

        }

    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        //limpiar datos
        controller.init();

        //cargar datos
        cargarDatos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JCheckBox chkActivo;
    private javax.swing.JComboBox cmbAlmacen;
    private javax.swing.JPanel frmReportesFacturacion;
    private javax.swing.JPanel frmDetalleReporteFacturacion;
    private org.jdesktop.swingx.JXHeader header;
    private javax.swing.JLabel lblAlmacen;
    private javax.swing.JLabel lblanyo;
    private javax.swing.JList listReportes;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblCodigoHasta;
    private javax.swing.JLabel lblFechaDesde;
    private javax.swing.JLabel lblFechaHasta;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JScrollPane scrollPane;

    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtAnyo;
    private javax.swing.JTextField txtCodigoHasta;
    private javax.swing.JTextField txtNombre;
    private org.jdesktop.swingx.JXDatePicker dtpFechaDesde;
    private org.jdesktop.swingx.JXDatePicker dtpFechaHasta;
    // End of variables declaration//GEN-END:variables
}

